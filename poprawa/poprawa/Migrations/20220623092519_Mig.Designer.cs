// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using poprawa.Models;

namespace poprawa.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220623092519_Mig")]
    partial class Mig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("poprawa.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.HasKey("FileId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            FileId = 1,
                            TeamId = 1,
                            FileExtension = ".txt",
                            FileName = "plik",
                            FileSize = 1
                        },
                        new
                        {
                            FileId = 2,
                            TeamId = 2,
                            FileExtension = ".txt",
                            FileName = "plik2",
                            FileSize = 2
                        });
                });

            modelBuilder.Entity("poprawa.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberNickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            MemberName = "Ala",
                            MemberNickName = "grzyb ",
                            MemberSurname = "Kot",
                            OrganizationId = 1
                        },
                        new
                        {
                            MemberId = 2,
                            MemberName = "Pawel",
                            MemberNickName = "Szybki ",
                            MemberSurname = "Klekot",
                            OrganizationId = 2
                        });
                });

            modelBuilder.Entity("poprawa.Models.Membership", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            TeamId = 1,
                            MembershipDate = new DateTime(2022, 6, 23, 11, 25, 18, 875, DateTimeKind.Local).AddTicks(1233)
                        },
                        new
                        {
                            MemberId = 2,
                            TeamId = 2,
                            MembershipDate = new DateTime(2022, 6, 23, 11, 25, 18, 882, DateTimeKind.Local).AddTicks(8496)
                        });
                });

            modelBuilder.Entity("poprawa.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationDomain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrganizationID");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            OrganizationID = 1,
                            OrganizationDomain = "g",
                            OrganizationName = "google"
                        },
                        new
                        {
                            OrganizationID = 2,
                            OrganizationDomain = "microsoft",
                            OrganizationName = "Microsoft"
                        });
                });

            modelBuilder.Entity("poprawa.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("TeamDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeamId");

                    b.HasIndex("OrganizationID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            OrganizationId = 1,
                            TeamDescription = "Pierscienia",
                            TeamName = "Druzyna"
                        },
                        new
                        {
                            TeamId = 2,
                            OrganizationId = 2,
                            TeamDescription = "kot",
                            TeamName = "Team"
                        });
                });

            modelBuilder.Entity("poprawa.Models.File", b =>
                {
                    b.HasOne("poprawa.Models.Team", "Team")
                        .WithMany("Files")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("poprawa.Models.Member", b =>
                {
                    b.HasOne("poprawa.Models.Organization", "Organization")
                        .WithMany("Members")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("poprawa.Models.Membership", b =>
                {
                    b.HasOne("poprawa.Models.Member", "Member")
                        .WithMany("Memberships")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("poprawa.Models.Team", "Team")
                        .WithMany("Memberships")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("poprawa.Models.Team", b =>
                {
                    b.HasOne("poprawa.Models.Organization", "Organization")
                        .WithMany("Teams")
                        .HasForeignKey("OrganizationID");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("poprawa.Models.Member", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("poprawa.Models.Organization", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("poprawa.Models.Team", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
